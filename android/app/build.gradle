buildscript {
    repositories {
        flatDir dirs: '../appsuit'
    }
    dependencies {
        classpath 'com.stealien.appsuit.gradle:AppSuit-AndroidStudio-24.1.2'
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.flutter_3_22"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    defaultConfig {
        manifestPlaceholders = [applicationName: "com.example.flutter_3_22.AppSuitApplication"]

        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.myapplication" //jh make sure this already registered
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
    
    bundle {
        abi {
            enableSplit = true
        }
    }
}

flutter {
    source = "../.."
}

apply plugin: 'appsuit'

appsuit {
    serverOptions {
        host = 'https://cloud.appsu.it/api/v1'
        id 'stealien_se'
        pw 'stealien'

//      options = ['check_root', 'detect_magisk', 'check_integrity', 'check_emul', 'check_debugging', 'prevent_debugging', 'self_protect', 'encrypt_so', 'encrypt_flutter', 'prevent_decompile']
//      options = [ 'check_root', 'detect_magisk', 'check_emul', 'check_integrity','check_debugging','prevent_debugging', 'prevent_adb', 'prevent_decompile', 'self_protect', 'check_mem_scanner','encrypt_flutter']
        options = ['check_root','detect_magisk']
        cloudBuild true
        enableServerBuild true
        processLibrary false
    }
    rulePath '../appsuit/rule.pro'
    dumpPath '../appsuit/dump.txt'
    buildTypes {
        release {
            enabled true
        }
        debug {
            enabled true
        }
    }
}
